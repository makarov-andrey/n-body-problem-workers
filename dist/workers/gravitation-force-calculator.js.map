{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/lib/accessors/BodyAccessor.ts","webpack:///./src/ts/lib/accessors/CelestialModelAccessor.ts","webpack:///./src/ts/lib/calculators/GravitationForceExertionCalculator.ts","webpack:///./src/ts/lib/calculators/NetGravitationForceCalculator.ts","webpack:///./src/ts/lib/constants/physics.ts","webpack:///./src/ts/workers/gravitation-force-calculator.ts"],"names":[],"mappings":"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","file":"workers/gravitation-force-calculator.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/ts/workers/gravitation-force-calculator.ts\");\n","export class BodyAccessor {\n    constructor (\n        public baseArray: Float64Array,\n        private dimensionsAmount: number\n    ) { }\n\n    get mass(): number {\n        return this.baseArray[this.massOffset];\n    }\n\n    set mass(value: number) {\n        this.baseArray[this.massOffset] = value;\n    }\n\n    get position(): Float64Array {\n        return this.baseArray.subarray(this.positionOffset, this.positionOffset + this.dimensionsAmount);\n    }\n\n    get velocity(): Float64Array {\n        return this.baseArray.subarray(this.velocityOffset, this.velocityOffset + this.dimensionsAmount);\n    }\n\n    get massOffset(): number {\n        return 0;\n    }\n\n    get positionOffset(): number {\n        return 1;\n    }\n\n    get velocityOffset(): number {\n        return 1 + this.dimensionsAmount;\n    }\n\n    rewrite(value: Float64Array) {\n        value.forEach((value: number, key: number) => this.baseArray[key] = value);\n    }\n}","import {BodyAccessor} from \"./BodyAccessor\";\n\nexport const TIME_COEFFICIENT_OFFSET = 0;\nexport const DIMENSIONS_AMOUNT_OFFSET = 1;\nexport const BODIES_AMOUNT_OFFSET = 2;\nexport const BODIES_START_OFFSET = 3;\n\nexport class CelestialModelAccessor {\n\n    constructor (\n        public baseArray: Float64Array\n    ) { }\n\n    set timeCoefficient (value: number) {\n        this.baseArray[TIME_COEFFICIENT_OFFSET] = value;\n    }\n\n    get timeCoefficient (): number {\n        return this.baseArray[TIME_COEFFICIENT_OFFSET];\n    }\n\n    set dimensionsAmount (value: number) {\n        this.baseArray[DIMENSIONS_AMOUNT_OFFSET] = value;\n    }\n\n    get dimensionsAmount (): number {\n        return this.baseArray[DIMENSIONS_AMOUNT_OFFSET];\n    }\n\n    set bodiesAmount (value: number) {\n        this.baseArray[BODIES_AMOUNT_OFFSET] = value;\n    }\n\n    get bodiesAmount (): number {\n        return this.baseArray[BODIES_AMOUNT_OFFSET];\n    }\n\n    getBody (index: number): BodyAccessor {\n        let bodyLength = this.dimensionsAmount * 2 + 1,\n            start = BODIES_START_OFFSET + bodyLength * index;\n        return new BodyAccessor(\n            this.baseArray.subarray(start, start + bodyLength - 1),\n            this.dimensionsAmount\n        );\n    }\n\n    get bodies (): BodyAccessor[] {\n        return Array(this.bodiesAmount).fill(1).map((val, key) => {\n            return this.getBody(key);\n        });\n    }\n\n    rewrite(value: Float64Array) {\n        value.forEach((value: number, key: number) => this.baseArray[key] = value);\n    }\n}","import {BodyAccessor} from \"../accessors/BodyAccessor\";\n\nexport class GravitationForceExertionCalculator {\n    exert(bodyAccessor: BodyAccessor, netGravityForce: number[], integrationStep: number) {\n        let acceleration = netGravityForce.map(val => val / bodyAccessor.mass),\n            velocity = bodyAccessor.velocity;\n        velocity.forEach((val, index) => {\n            velocity[index] += acceleration[index] * integrationStep;\n        });\n\n        let position = bodyAccessor.position;\n        position.forEach((val, index) => {\n            position[index] += velocity[index] * integrationStep;\n        });\n\n        return bodyAccessor;\n    }\n}","import {CelestialModelAccessor} from \"../accessors/CelestialModelAccessor\";\nimport {G} from \"../constants/physics\";\n\nexport class NetGravitationForceCalculator {\n    calculate(modelAccessor: CelestialModelAccessor, currentBodyIndex: number) {\n        let currentBody = modelAccessor.getBody(currentBodyIndex);\n        return modelAccessor.bodies.reduce(\n            (netForce, anotherBody, anotherBodyIndex) => {\n                if (anotherBodyIndex == currentBodyIndex) return netForce;\n\n                let anotherBodyPosition = anotherBody.position,\n                    distance = Math.sqrt(Math.abs(currentBody.position.reduce(\n                        (accumulated, pointVal, dimensionIndex) => accumulated + Math.pow(anotherBodyPosition[dimensionIndex] - pointVal, 2),\n                        0\n                    ))),\n                    forceModuloValue = G * (currentBody.mass * anotherBody.mass / Math.pow(distance, 2)),\n                    proportion = forceModuloValue / distance,\n                    force = anotherBody.position.map(val => val * proportion);\n\n                return netForce.map((val, index) => val + force[index]);\n            },\n            Array(modelAccessor.dimensionsAmount).fill(0)\n        );\n    }\n}","export const G = 6.674184e-11;\n\nexport default {\n    G\n}","// Этот воркер занимается вычислениями силы гравитации и результатов её воздействия на тела\n\nimport {NetGravitationForceCalculator} from \"../lib/calculators/NetGravitationForceCalculator\";\nimport {GravitationForceExertionCalculator} from \"../lib/calculators/GravitationForceExertionCalculator\";\nimport {CelestialModelAccessor} from \"../lib/accessors/CelestialModelAccessor\";\nimport {BodyAccessor} from \"../lib/accessors/BodyAccessor\";\n\nlet netGravitationForceCalculator = new NetGravitationForceCalculator();\nlet gravitationForceExertionCalculator = new GravitationForceExertionCalculator();\n\n(self as unknown as Worker).onmessage = function(event: MessageEvent) {\n    // todo переделать на WorkerEventMap если возможно\n    switch (event.data.type) {\n        case 'calculate-net-gravity-force':\n            this.postMessage({\n                type: 'net-gravity-force-calculation-result',\n                id: event.data.id,\n                result: netGravitationForceCalculator.calculate(\n                    new CelestialModelAccessor(event.data.model),\n                    event.data.index\n                )\n            });\n            break;\n        case 'calculate-exertion':\n            this.postMessage({\n                type: 'exertion-calculation-result',\n                id: event.data.id,\n                result: gravitationForceExertionCalculator\n                    .exert(\n                        new BodyAccessor(event.data.model, event.data.dimensionsAmount),\n                        event.data.netGravityForce,\n                        event.data.integrationStep\n                    )\n                    .baseArray\n            });\n            break;\n    }\n};"],"sourceRoot":""}
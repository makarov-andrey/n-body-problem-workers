{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/lib/Modulator.ts","webpack:///./src/ts/lib/accessors/BodyAccessor.ts","webpack:///./src/ts/lib/accessors/CelestialModelAccessor.ts","webpack:///./src/ts/settings.ts","webpack:///./src/ts/workers/modulator.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AClFA,kFAAmC;AACnC,mJAA0E;AAE1E,MAAa,SAAS;IAAtB;QAKY,YAAO,GAAG,KAAK,CAAC,CAAC,oEAAoE;QACrF,oBAAe,GAAG,kBAAQ,CAAC,kBAAkB,CAAC,CAAC,iBAAiB;QAChE,uBAAkB,GAAG;YACzB,IAAI,MAAM,CAAC,yCAAyC,CAAC;YACrD,IAAI,MAAM,CAAC,yCAAyC,CAAC;SACxD,CAAC;IA4FN,CAAC;IA1FG,KAAK,CAAE,SAAuB;QAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,+CAAsB,CAAC,SAAS,CAAC,CAAC;IAC/D,CAAC;IAED,KAAK;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;IACL,CAAC;IAED,IAAI;QACA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAEO,KAAK,CAAC,IAAI;QACd,OAAO,IAAI,CAAC,OAAO,EAAE;YACjB,mCAAmC;YACnC,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,EACxB,OAAuB,CAAC;YAE5B,GAAG;gBACC,OAAO,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,kBAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;gBACzG,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC;aAC7B,QAAQ,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,kBAAQ,CAAC,0BAA0B,EAAE;YAEvG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,EAAE,kBAAQ,CAAC,kBAAkB,CAAC,CAAC;YACvF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,EACpB,UAAU,GAAG,WAAW,GAAG,kBAAQ,CAAC,eAAe,CAAC;YACxD,IAAI,UAAU,GAAG,OAAO,EAAE;gBACtB,2HAA2H;gBAC3H,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,CAAC,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,GAAG,WAAW,CAAC,CAAC;aAC7F;iBAAM;gBACH,2BAA2B;gBAC3B,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,CAAC,CAAC;gBACvC,oDAAoD;gBACpD,mEAAmE;gBACnE,OAAM,IAAI,CAAC,GAAG,EAAE,GAAG,UAAU;oBAAC,CAAC;aAClC;SACJ;IACL,CAAC;IAEO,SAAS,CAAC,eAAuB,EAAE,GAAG,iBAA2B;QACrE,OAAiC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;YACpF,OAAO,IAAI,OAAO,CAAE,OAAO,CAAC,EAAE;gBAC1B,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,EAClB,SAAS,GAAG,CAAC,KAAmB,EAAE,EAAE;oBAChC,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,oBAAoB,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;wBAClE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;wBACvE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBAC9B;gBACL,CAAC,CAAC;gBAEN,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBACpE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC;oBACrC,IAAI,EAAE,WAAW;oBACjB,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS;oBACnC,eAAe,EAAE,eAAe;oBAChC,eAAe,EAAE,KAAK;oBACtB,EAAE,EAAE,EAAE;iBACT,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAEO,yBAAyB,CAAC,OAAqB,EAAE,OAAqB;QAC1E,IAAI,OAAO,GAAG,IAAI,+CAAsB,CAAC,OAAO,CAAC,CAAC,MAAM,EACpD,OAAO,GAAG,IAAI,+CAAsB,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;QAEzD,OAAO,OAAO,CAAC,MAAM,CACjB,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE;YACzB,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,EAC1B,aAAa,GAAG,KAAK,CAAC,QAAQ,EAC9B,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC;YAEnC,OAAO,MAAM;kBACP,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CACtC,CAAC,WAAW,EAAE,aAAa,EAAE,cAAc,EAAE,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,aAAa,EAAE,CAAC,CAAC,EACxH,CAAC,CACJ,CAAC,CAAC;kBACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CACtC,CAAC,WAAW,EAAE,aAAa,EAAE,cAAc,EAAE,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,aAAa,EAAE,CAAC,CAAC,EACxH,CAAC,CACJ,CAAC,CAAC,CAAC;QACZ,CAAC,EACD,CAAC,CACJ,CAAC;IACN,CAAC;CACJ;AAtGD,8BAsGC;;;;;;;;;;;;;;;ACzGD,MAAa,YAAY;IACrB,YACW,SAAuB,EACtB,gBAAwB;QADzB,cAAS,GAAT,SAAS,CAAc;QACtB,qBAAgB,GAAhB,gBAAgB,CAAQ;IAChC,CAAC;IAEL,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,IAAI,CAAC,KAAa;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;IAC5C,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACrG,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACrG,CAAC;IAED,IAAI,UAAU;QACV,OAAO,CAAC,CAAC;IACb,CAAC;IAED,IAAI,cAAc;QACd,OAAO,CAAC,CAAC;IACb,CAAC;IAED,IAAI,cAAc;QACd,OAAO,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;IACrC,CAAC;IAED,OAAO,CAAC,KAAmB;QACvB,KAAK,CAAC,OAAO,CAAC,CAAC,KAAa,EAAE,GAAW,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/E,CAAC;CACJ;AArCD,oCAqCC;;;;;;;;;;;;;;;ACrCD,2GAA4C;AAE/B,+BAAuB,GAAG,CAAC,CAAC;AAC5B,gCAAwB,GAAG,CAAC,CAAC;AAC7B,4BAAoB,GAAG,CAAC,CAAC;AACzB,2BAAmB,GAAG,CAAC,CAAC;AAErC,MAAa,sBAAsB;IAE/B,YACW,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;IAC9B,CAAC;IAEL,IAAI,eAAe,CAAE,KAAa;QAC9B,IAAI,CAAC,SAAS,CAAC,+BAAuB,CAAC,GAAG,KAAK,CAAC;IACpD,CAAC;IAED,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,SAAS,CAAC,+BAAuB,CAAC,CAAC;IACnD,CAAC;IAED,IAAI,gBAAgB,CAAE,KAAa;QAC/B,IAAI,CAAC,SAAS,CAAC,gCAAwB,CAAC,GAAG,KAAK,CAAC;IACrD,CAAC;IAED,IAAI,gBAAgB;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC,gCAAwB,CAAC,CAAC;IACpD,CAAC;IAED,IAAI,YAAY,CAAE,KAAa;QAC3B,IAAI,CAAC,SAAS,CAAC,4BAAoB,CAAC,GAAG,KAAK,CAAC;IACjD,CAAC;IAED,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,SAAS,CAAC,4BAAoB,CAAC,CAAC;IAChD,CAAC;IAED,OAAO,CAAE,KAAa;QAClB,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,CAAC,EAC1C,KAAK,GAAG,2BAAmB,GAAG,UAAU,GAAG,KAAK,CAAC;QACrD,OAAO,IAAI,2BAAY,CACnB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG,UAAU,GAAG,CAAC,CAAC,EACtD,IAAI,CAAC,gBAAgB,CACxB,CAAC;IACN,CAAC;IAED,IAAI,MAAM;QACN,OAAO,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACrD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO,CAAC,KAAmB;QACvB,KAAK,CAAC,OAAO,CAAC,CAAC,KAAa,EAAE,GAAW,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/E,CAAC;CACJ;AAhDD,wDAgDC;;;;;;;;;;;;;;;ACvDD,kBAAe;IACX,MAAM,EAAE,CAAC,GAAG,EAAE;QACV,IAAI,KAAK,GAAG,GAAG,CAAC;QAChB,IAAI,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC;QACxB,IAAI,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC;QACxB,IAAI,EAAE,GAAG,QAAQ,CAAC;QAClB,IAAI,EAAE,GAAG,QAAQ,CAAC;QAElB,OAAO;YACH;gBACI,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE;oBACN,CAAC,CAAC,GAAG,KAAK,GAAG,OAAO;oBACpB,OAAO;iBACV;gBACD,QAAQ,EAAE;oBACN,EAAE,GAAG,KAAK;oBACV,EAAE,GAAG,KAAK;iBACb;aACJ;YACD;gBACI,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE;oBACN,KAAK,GAAG,OAAO;oBACf,OAAO;iBACV;gBACD,QAAQ,EAAE;oBACN,EAAE,GAAG,KAAK;oBACV,EAAE,GAAG,KAAK;iBACb;aACJ;YACD;gBACI,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE;oBACN,OAAO;oBACP,OAAO;iBACV;gBACD,QAAQ,EAAE;oBACN,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK;oBACf,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK;iBAClB;aACJ;SACJ;IACL,CAAC,CAAC,EAAE;IACJ,gBAAgB,EAAE,CAAC;IACnB,0BAA0B,EAAE,IAAI;IAChC,kBAAkB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACpC,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACjC,eAAe,EAAE,CAAC;IAClB,cAAc,EAAE,GAAG;CACtB,CAAC;;;;;;;;;;;;;;;AClDF,8EAA8E;AAC9E,6FAA2C;AAE3C,IAAI,SAAS,GAAG,IAAI,qBAAS,EAAE,CAAC;AAEhC,gBAAgB,CAAC,SAAS,EAAE,CAAC,KAAmB,EAAE,EAAE;IAChD,kDAAkD;IAClD,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE;QACrB,KAAK,OAAO;YACR,SAAS,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACrD,MAAM;QACV,KAAK,OAAO;YACR,SAAS,CAAC,KAAK,EAAE,CAAC;YAClB,MAAM;QACV,KAAK,MAAM;YACP,SAAS,CAAC,IAAI,EAAE,CAAC;YACjB,MAAM;KACb;AACL,CAAC,CAAC,CAAC","file":"workers/modulator.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/ts/workers/modulator.ts\");\n","import settings from \"../settings\";\nimport {CelestialModelAccessor} from \"./accessors/CelestialModelAccessor\";\n\nexport class Modulator {\n    // Переменная хранит в себе примитивный массив со всей информацией о физическом состоянии модели в момент времени.\n    // Переменной декларируется в основном потоке и приходит в этот воркер через SharedArrayBuffer, следовательно основной\n    // поток так же имеет доступ к содержимому\n    private modelAccessor: CelestialModelAccessor;\n    private started = false; // показатель того происходит ли сейчас модуляция в реальном времени\n    private integrationStep = settings.maxIntegrationStep; // шаг интеграции\n    private integrationWorkers = [\n        new Worker('/dist/workers/integration-calculator.js'),\n        new Worker('/dist/workers/integration-calculator.js'),\n    ];\n\n    reset (baseArray: Float64Array) {\n        this.modelAccessor = new CelestialModelAccessor(baseArray);\n    }\n\n    start() {\n        if (!this.started) {\n            this.started = true;\n            this.work();\n        }\n    }\n\n    stop() {\n        this.started = false;\n    }\n\n    private async work() {\n        while (this.started) {\n            //todo перейти на performance.now()\n            let startedTime = Date.now(),\n                results: Float64Array[];\n\n            do {\n                results = await this.integrate(settings.integrationTime, this.integrationStep / 2, this.integrationStep);\n                this.integrationStep /= 4;\n            } while (this.determineMeasurementError(results[0], results[1]) > settings.admissibleMeasurementError);\n\n            this.integrationStep = Math.min(this.integrationStep * 8, settings.maxIntegrationStep);\n            this.modelAccessor.rewrite(results[0]);\n\n            let realNow = Date.now(),\n                imagineNow = startedTime + settings.integrationTime;\n            if (imagineNow < realNow) {\n                //вычисляли слишком долго, надо показывать юзеру, что компуктер не справляется и он смотрит проекцию в замедленном варианте\n                this.modelAccessor.timeCoefficient = (imagineNow - startedTime) / (realNow - startedTime);\n            } else {\n                //вычисляли слишком быстро.\n                this.modelAccessor.timeCoefficient = 1;\n                //костыль для sleep чтобы не обгонять реальное время\n                //todo найти способ сделать точный асинхронный sleep в наносекундах\n                while(Date.now() < imagineNow);\n            }\n        }\n    }\n\n    private integrate(integrationTime: number, ...integrationsSteps: number[]): Promise<Float64Array[]> {\n        return <Promise<Float64Array[]>> Promise.all(integrationsSteps.map(async (value, key) => {\n            return new Promise (resolve => {\n                let id = Math.random(),\n                    onmessage = (event: MessageEvent) => {\n                        if (event.data.type === 'integration-result' && event.data.id === id) {\n                            this.integrationWorkers[key].removeEventListener('message', onmessage);\n                            resolve(event.data.result);\n                        }\n                    };\n\n                this.integrationWorkers[key].addEventListener('message', onmessage);\n                this.integrationWorkers[key].postMessage({\n                    type: 'integrate',\n                    model: this.modelAccessor.baseArray,\n                    integrationTime: integrationTime,\n                    integrationStep: value,\n                    id: id\n                });\n            });\n        }));\n    }\n\n    private determineMeasurementError(result1: Float64Array, result2: Float64Array): number {\n        let bodies1 = new CelestialModelAccessor(result1).bodies,\n            bodies2 = new CelestialModelAccessor(result2).bodies;\n\n        return bodies1.reduce(\n            (result, body1, bodyIndex) => {\n                let body2 = bodies2[bodyIndex],\n                    body2Position = body2.position,\n                    body2Velocity = body2.velocity;\n\n                return result\n                    + Math.sqrt(Math.abs(body1.position.reduce(\n                        (accumulated, body1PointVal, dimensionIndex) => accumulated + Math.pow(body2Position[dimensionIndex] - body1PointVal, 2),\n                        0\n                    )))\n                    + Math.sqrt(Math.abs(body1.velocity.reduce(\n                        (accumulated, body1PointVal, dimensionIndex) => accumulated + Math.pow(body2Velocity[dimensionIndex] - body1PointVal, 2),\n                        0\n                    )));\n            },\n            0\n        );\n    }\n}","export class BodyAccessor {\n    constructor (\n        public baseArray: Float64Array,\n        private dimensionsAmount: number\n    ) { }\n\n    get mass(): number {\n        return this.baseArray[this.massOffset];\n    }\n\n    set mass(value: number) {\n        this.baseArray[this.massOffset] = value;\n    }\n\n    get position(): Float64Array {\n        return this.baseArray.subarray(this.positionOffset, this.positionOffset + this.dimensionsAmount);\n    }\n\n    get velocity(): Float64Array {\n        return this.baseArray.subarray(this.velocityOffset, this.velocityOffset + this.dimensionsAmount);\n    }\n\n    get massOffset(): number {\n        return 0;\n    }\n\n    get positionOffset(): number {\n        return 1;\n    }\n\n    get velocityOffset(): number {\n        return 1 + this.dimensionsAmount;\n    }\n\n    rewrite(value: Float64Array) {\n        value.forEach((value: number, key: number) => this.baseArray[key] = value);\n    }\n}","import {BodyAccessor} from \"./BodyAccessor\";\n\nexport const TIME_COEFFICIENT_OFFSET = 0;\nexport const DIMENSIONS_AMOUNT_OFFSET = 1;\nexport const BODIES_AMOUNT_OFFSET = 2;\nexport const BODIES_START_OFFSET = 3;\n\nexport class CelestialModelAccessor {\n\n    constructor (\n        public baseArray: Float64Array\n    ) { }\n\n    set timeCoefficient (value: number) {\n        this.baseArray[TIME_COEFFICIENT_OFFSET] = value;\n    }\n\n    get timeCoefficient (): number {\n        return this.baseArray[TIME_COEFFICIENT_OFFSET];\n    }\n\n    set dimensionsAmount (value: number) {\n        this.baseArray[DIMENSIONS_AMOUNT_OFFSET] = value;\n    }\n\n    get dimensionsAmount (): number {\n        return this.baseArray[DIMENSIONS_AMOUNT_OFFSET];\n    }\n\n    set bodiesAmount (value: number) {\n        this.baseArray[BODIES_AMOUNT_OFFSET] = value;\n    }\n\n    get bodiesAmount (): number {\n        return this.baseArray[BODIES_AMOUNT_OFFSET];\n    }\n\n    getBody (index: number): BodyAccessor {\n        let bodyLength = this.dimensionsAmount * 2 + 1,\n            start = BODIES_START_OFFSET + bodyLength * index;\n        return new BodyAccessor(\n            this.baseArray.subarray(start, start + bodyLength - 1),\n            this.dimensionsAmount\n        );\n    }\n\n    get bodies (): BodyAccessor[] {\n        return Array(this.bodiesAmount).fill(1).map((val, key) => {\n            return this.getBody(key);\n        });\n    }\n\n    rewrite(value: Float64Array) {\n        value.forEach((value: number, key: number) => this.baseArray[key] = value);\n    }\n}","export default {\n    bodies: (() => {\n        let scale = 3e8;\n        let offsetX = scale * 2;\n        let offsetY = scale * 2;\n        let p1 = 0.392955;\n        let p2 = 0.097579;\n\n        return [\n            {\n                mass: 2e35,\n                position: [\n                    -1 * scale + offsetX,\n                    offsetY\n                ],\n                velocity: [\n                    p1 * scale,\n                    p2 * scale\n                ]\n            },\n            {\n                mass: 2e35,\n                position: [\n                    scale + offsetX,\n                    offsetY\n                ],\n                velocity: [\n                    p1 * scale,\n                    p2 * scale\n                ]\n            },\n            {\n                mass: 2e35,\n                position: [\n                    offsetX,\n                    offsetY\n                ],\n                velocity: [\n                    -2 * p1 * scale,\n                    -2 * p2 * scale\n                ]\n            }\n        ]\n    })(), // начальные стейты тел в системе\n    dimensionsAmount: 2, // мерность пространства\n    admissibleMeasurementError: 1000, // допустимая погрешность todo найти заебатую\n    maxIntegrationStep: Math.pow(2, -15), // максимальный шаг интеграции по времени\n    integrationTime: Math.pow(2, -13), // время интегрирования одного цикла проверки погрешности\n    timeCoefficient: 1, // показатель течения времени\n    renderingScale: 3e6, // масштаб отрисовки\n};","// Этот воркер управляет всеми вычислениями модели гравитационного воздействия\nimport {Modulator} from \"../lib/Modulator\";\n\nlet modulator = new Modulator();\n\naddEventListener('message', (event: MessageEvent) => {\n    // todo переделать на WorkerEventMap если возможно\n    switch (event.data.type) {\n        case 'reset':\n            modulator.reset(new Float64Array(event.data.buffer));\n            break;\n        case 'start':\n            modulator.start();\n            break;\n        case 'stop':\n            modulator.stop();\n            break;\n    }\n});"],"sourceRoot":""}